#!/bin/bash

# Script t·ªëi ∆∞u ·∫£nh cho eTax Mobile PWA
# T√°c gi·∫£: Cirphe AI Assistant
# Ng√†y: 15/09/2025

echo "üñºÔ∏è [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] B·∫Øt ƒë·∫ßu t·ªëi ∆∞u ·∫£nh - eTax Mobile PWA"

# T·∫°o th∆∞ m·ª•c backup v√† optimized
mkdir -p public/assets/backup
mkdir -p public/assets/optimized

# Backup ·∫£nh g·ªëc
echo "üì¶ [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] Backup ·∫£nh g·ªëc..."
cp -r public/assets/*.png public/assets/backup/ 2>/dev/null || true
cp -r public/assets/*.jpg public/assets/backup/ 2>/dev/null || true
cp -r public/assets/*.jpeg public/assets/backup/ 2>/dev/null || true

# ƒê·∫øm s·ªë ·∫£nh
TOTAL_IMAGES=$(find public/assets -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" | wc -l)
echo "üìä [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] T·ªïng s·ªë ·∫£nh: $TOTAL_IMAGES"

# C√†i ƒë·∫∑t imagemagick n·∫øu ch∆∞a c√≥
if ! command -v convert &> /dev/null; then
    echo "üîß [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] C√†i ƒë·∫∑t ImageMagick..."
    sudo apt update && sudo apt install -y imagemagick
fi

# C√†i ƒë·∫∑t webp tools n·∫øu ch∆∞a c√≥
if ! command -v cwebp &> /dev/null; then
    echo "üîß [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] C√†i ƒë·∫∑t WebP tools..."
    sudo apt install -y webp
fi

# T·ªëi ∆∞u PNG (icons nh·ªè)
echo "üéØ [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] T·ªëi ∆∞u PNG icons..."
find public/assets -name "*.png" -exec sh -c '
    file="$1"
    filename=$(basename "$file" .png)
    dir=$(dirname "$file")
    
    # Ki·ªÉm tra k√≠ch th∆∞·ªõc
    size=$(identify -format "%wx%h" "$file")
    width=$(echo $size | cut -dx -f1)
    height=$(echo $size | cut -dx -f2)
    
    if [ $width -le 64 ] && [ $height -le 64 ]; then
        echo "  üì± Icon: $filename ($size) - T·ªëi ∆∞u cho mobile"
        # N√©n PNG cho icons
        convert "$file" -strip -quality 90 -define png:compression-level=9 "$dir/optimized/${filename}.png"
        # T·∫°o WebP version
        cwebp -q 90 -m 6 "$file" -o "$dir/optimized/${filename}.webp"
    else
        echo "  üñºÔ∏è Image: $filename ($size) - T·ªëi ∆∞u cho minh h·ªça"
        # N√©n PNG cho ·∫£nh l·ªõn
        convert "$file" -strip -quality 85 -define png:compression-level=6 "$dir/optimized/${filename}.png"
        # T·∫°o WebP version
        cwebp -q 85 -m 6 "$file" -o "$dir/optimized/${filename}.webp"
    fi
' _ {} \;

# T·ªëi ∆∞u JPG
echo "üéØ [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] T·ªëi ∆∞u JPG images..."
find public/assets -name "*.jpg" -o -name "*.jpeg" | while read file; do
    filename=$(basename "$file" .jpg)
    filename=$(basename "$filename" .jpeg)
    dir=$(dirname "$file")
    
    echo "  üñºÔ∏è Image: $filename - T·ªëi ∆∞u JPG"
    # N√©n JPG
    convert "$file" -strip -quality 85 -interlace JPEG "$dir/optimized/${filename}.jpg"
    # T·∫°o WebP version
    cwebp -q 85 -m 6 "$file" -o "$dir/optimized/${filename}.webp"
done

# T·∫°o responsive images (multiple sizes)
echo "üì± [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] T·∫°o responsive images..."
find public/assets/optimized -name "*.png" -o -name "*.jpg" | while read file; do
    filename=$(basename "$file")
    name="${filename%.*}"
    ext="${filename##*.}"
    dir=$(dirname "$file")
    
    # T·∫°o c√°c k√≠ch th∆∞·ªõc kh√°c nhau
    convert "$file" -resize 50% "$dir/${name}_sm.$ext"
    convert "$file" -resize 75% "$dir/${name}_md.$ext"
    convert "$file" -resize 125% "$dir/${name}_lg.$ext"
done

# T√≠nh to√°n k√≠ch th∆∞·ªõc file
echo "üìä [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] T√≠nh to√°n k√≠ch th∆∞·ªõc file..."
ORIGINAL_SIZE=$(du -sh public/assets/backup | cut -f1)
OPTIMIZED_SIZE=$(du -sh public/assets/optimized | cut -f1)

echo ""
echo "üéâ [$(date '+%d/%m/%Y %H:%M:%S')] [SUCCESS] T·ªëi ∆∞u ·∫£nh ho√†n t·∫•t!"
echo "üìä [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] K·∫øt qu·∫£:"
echo "   - K√≠ch th∆∞·ªõc g·ªëc: $ORIGINAL_SIZE"
echo "   - K√≠ch th∆∞·ªõc t·ªëi ∆∞u: $OPTIMIZED_SIZE"
echo "   - T·ªïng s·ªë ·∫£nh: $TOTAL_IMAGES"
echo "   - ƒê·ªãnh d·∫°ng: PNG, JPG, WebP"
echo "   - Responsive: sm, md, lg sizes"

echo ""
echo "üöÄ [$(date '+%d/%m/%Y %H:%M:%S')] [INFO] C√°ch s·ª≠ d·ª•ng:"
echo "   1. Thay th·∫ø ƒë∆∞·ªùng d·∫´n ·∫£nh trong components"
echo "   2. S·ª≠ d·ª•ng WebP v·ªõi fallback PNG/JPG"
echo "   3. Lazy loading cho ·∫£nh ngo√†i viewport"
echo "   4. Preload ·∫£nh quan tr·ªçng trong index.html"

echo ""
echo "‚ú® [$(date '+%d/%m/%Y %H:%M:%S')] [SUCCESS] Image optimization completed - Cirphe AI Assistant"