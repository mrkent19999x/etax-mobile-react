#!/bin/bash
# Ultimate Assistant Configuration Script
# Cấu hình em thành trợ lý cấp cao với single email sync

echo "🚀 Configuring Ultimate Assistant with Single Email Sync..."

# Get user's email
echo "📧 Please enter your email address for unified integration:"
read -p "Email: " USER_EMAIL

if [ -z "$USER_EMAIL" ]; then
    echo "❌ Email is required for configuration"
    exit 1
fi

echo "✅ Using email: $USER_EMAIL"

# Create unified configuration
echo "📋 Creating unified configuration..."

# Create ultimate assistant config
cat > configs/ultimate-assistant.json << EOF
{
  "assistant": {
    "level": "ultimate",
    "email": "$USER_EMAIL",
    "capabilities": {
      "repository_management": "full_control",
      "project_setup": "automated", 
      "code_generation": "intelligent",
      "deployment": "automated",
      "monitoring": "continuous",
      "reporting": "automated",
      "communication": "proactive"
    }
  },
  "integrations": {
    "email": "$USER_EMAIL",
    "github": {
      "account": "$USER_EMAIL",
      "repos": "auto_create",
      "commits": "auto_push",
      "issues": "auto_manage"
    },
    "cursor": {
      "account": "$USER_EMAIL",
      "settings": "auto_sync",
      "mcp": "auto_config"
    },
    "notifications": {
      "email": "$USER_EMAIL",
      "frequency": "real_time",
      "priority": "high"
    }
  },
  "automation": {
    "enabled": true,
    "level": "ultimate",
    "workflows": {
      "project_init": "automated",
      "development": "automated", 
      "deployment": "automated",
      "monitoring": "continuous",
      "reporting": "scheduled"
    }
  },
  "security": {
    "email_verification": "required",
    "access_control": "email_based",
    "permissions": {
      "repository": "full_access",
      "deployment": "automated",
      "monitoring": "continuous",
      "notifications": "real_time"
    }
  }
}
EOF

echo "✅ Ultimate assistant configuration created"

# Update environment variables
echo "📝 Updating environment variables..."

# Update .env file
cat >> configs/environment.env << EOF

# Ultimate Assistant Configuration
USER_EMAIL=$USER_EMAIL
ASSISTANT_LEVEL=ultimate
AUTOMATION_ENABLED=true
SINGLE_EMAIL_SYNC=true

# Unified Email Integration
GITHUB_EMAIL=$USER_EMAIL
CURSOR_EMAIL=$USER_EMAIL
MCP_EMAIL=$USER_EMAIL
NOTIFICATION_EMAIL=$USER_EMAIL
ALERT_EMAIL=$USER_EMAIL
REPORT_EMAIL=$USER_EMAIL

# Auto-sync Configuration
AUTO_SYNC_ENABLED=true
AUTO_SYNC_FREQUENCY=real_time
AUTO_SYNC_SERVICES=github,cursor,mcp_servers,notifications
EOF

echo "✅ Environment variables updated"

# Create automation scripts
echo "🔧 Creating automation scripts..."

# Create project automation script
cat > scripts/auto-project-setup.sh << 'EOF'
#!/bin/bash
# Auto Project Setup Script

echo "🚀 Auto Project Setup - Ultimate Assistant Mode"

# Get project details
PROJECT_NAME=$1
PROJECT_TYPE=$2
PROJECT_EMAIL=${USER_EMAIL:-"user@email.com"}

if [ -z "$PROJECT_NAME" ]; then
    echo "❌ Project name is required"
    exit 1
fi

echo "📋 Setting up project: $PROJECT_NAME"
echo "📧 Email: $PROJECT_EMAIL"

# Auto-create repository structure
mkdir -p "$PROJECT_NAME"/{src,docs,scripts,configs,tests}
echo "✅ Project structure created"

# Auto-generate README
cat > "$PROJECT_NAME/README.md" << EOL
# $PROJECT_NAME

## Project Overview
Auto-generated project by Ultimate Assistant

## Setup
\`\`\`bash
cd $PROJECT_NAME
./scripts/setup.sh
\`\`\`

## Development
\`\`\`bash
npm install
npm run dev
\`\`\`

## Deployment
\`\`\`bash
npm run build
npm run deploy
\`\`\`

---
*Generated by Ultimate Assistant - $PROJECT_EMAIL*
EOL

echo "✅ README generated"

# Auto-generate package.json
cat > "$PROJECT_NAME/package.json" << EOL
{
  "name": "$PROJECT_NAME",
  "version": "1.0.0",
  "description": "Auto-generated project by Ultimate Assistant",
  "main": "src/index.js",
  "scripts": {
    "dev": "node src/index.js",
    "build": "npm run build:prod",
    "test": "npm run test:unit",
    "deploy": "npm run build && npm run deploy:prod"
  },
  "author": "$PROJECT_EMAIL",
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {}
}
EOL

echo "✅ Package.json generated"

# Auto-generate setup script
cat > "$PROJECT_NAME/scripts/setup.sh" << 'EOF'
#!/bin/bash
echo "🚀 Setting up project..."
npm install
echo "✅ Project setup completed"
EOF

chmod +x "$PROJECT_NAME/scripts/setup.sh"
echo "✅ Setup script created"

# Auto-generate git configuration
cd "$PROJECT_NAME"
git init
git config user.email "$PROJECT_EMAIL"
git config user.name "Ultimate Assistant"
git add .
git commit -m "Initial commit: Auto-generated project by Ultimate Assistant"

echo "✅ Git repository initialized"

# Send notification email
echo "📧 Sending notification email to $PROJECT_EMAIL"
echo "Project $PROJECT_NAME has been auto-generated and is ready for development!" | mail -s "Ultimate Assistant: Project $PROJECT_NAME Ready" "$PROJECT_EMAIL"

echo "🎉 Project $PROJECT_NAME setup completed!"
echo "📧 Notification sent to $PROJECT_EMAIL"
EOF

chmod +x scripts/auto-project-setup.sh
echo "✅ Auto project setup script created"

# Create deployment automation script
cat > scripts/auto-deploy.sh << 'EOF'
#!/bin/bash
# Auto Deployment Script

echo "🚀 Auto Deployment - Ultimate Assistant Mode"

PROJECT_NAME=$1
PROJECT_EMAIL=${USER_EMAIL:-"user@email.com"}

if [ -z "$PROJECT_NAME" ]; then
    echo "❌ Project name is required"
    exit 1
fi

echo "📋 Deploying project: $PROJECT_NAME"
echo "📧 Email: $PROJECT_EMAIL"

cd "$PROJECT_NAME"

# Auto-build
echo "🔨 Building project..."
npm run build
if [ $? -eq 0 ]; then
    echo "✅ Build successful"
else
    echo "❌ Build failed"
    exit 1
fi

# Auto-test
echo "🧪 Running tests..."
npm run test
if [ $? -eq 0 ]; then
    echo "✅ Tests passed"
else
    echo "❌ Tests failed"
    exit 1
fi

# Auto-deploy
echo "🚀 Deploying to production..."
npm run deploy
if [ $? -eq 0 ]; then
    echo "✅ Deployment successful"
else
    echo "❌ Deployment failed"
    exit 1
fi

# Send notification email
echo "📧 Sending deployment notification to $PROJECT_EMAIL"
echo "Project $PROJECT_NAME has been successfully deployed to production!" | mail -s "Ultimate Assistant: $PROJECT_NAME Deployed" "$PROJECT_EMAIL"

echo "🎉 Project $PROJECT_NAME deployed successfully!"
echo "📧 Notification sent to $PROJECT_EMAIL"
EOF

chmod +x scripts/auto-deploy.sh
echo "✅ Auto deployment script created"

# Create monitoring script
cat > scripts/auto-monitor.sh << 'EOF'
#!/bin/bash
# Auto Monitoring Script

echo "📊 Auto Monitoring - Ultimate Assistant Mode"

PROJECT_NAME=$1
PROJECT_EMAIL=${USER_EMAIL:-"user@email.com"}

if [ -z "$PROJECT_NAME" ]; then
    echo "❌ Project name is required"
    exit 1
fi

echo "📋 Monitoring project: $PROJECT_NAME"
echo "📧 Email: $PROJECT_EMAIL"

# Check project status
cd "$PROJECT_NAME"

# Check if project is running
if pgrep -f "$PROJECT_NAME" > /dev/null; then
    STATUS="Running"
    echo "✅ Project is running"
else
    STATUS="Stopped"
    echo "❌ Project is stopped"
fi

# Check disk usage
DISK_USAGE=$(du -sh . | cut -f1)
echo "💾 Disk usage: $DISK_USAGE"

# Check memory usage
MEMORY_USAGE=$(ps aux | grep "$PROJECT_NAME" | awk '{sum+=$6} END {print sum/1024 " MB"}')
echo "🧠 Memory usage: $MEMORY_USAGE"

# Generate monitoring report
cat > "monitoring-report-$(date +%Y%m%d).md" << EOL
# Monitoring Report - $PROJECT_NAME

**Date**: $(date)
**Status**: $STATUS
**Disk Usage**: $DISK_USAGE
**Memory Usage**: $MEMORY_USAGE

## Performance Metrics
- **Uptime**: $(uptime)
- **Load Average**: $(cat /proc/loadavg)
- **Disk Space**: $(df -h . | tail -1)

## Recommendations
- Monitor disk usage regularly
- Check memory consumption
- Review performance metrics

---
*Generated by Ultimate Assistant - $PROJECT_EMAIL*
EOL

echo "✅ Monitoring report generated"

# Send monitoring email
echo "📧 Sending monitoring report to $PROJECT_EMAIL"
mail -s "Ultimate Assistant: $PROJECT_NAME Monitoring Report" "$PROJECT_EMAIL" < "monitoring-report-$(date +%Y%m%d).md"

echo "🎉 Monitoring completed for $PROJECT_NAME!"
echo "📧 Report sent to $PROJECT_EMAIL"
EOF

chmod +x scripts/auto-monitor.sh
echo "✅ Auto monitoring script created"

# Create ultimate assistant dashboard
cat > scripts/ultimate-dashboard.sh << 'EOF'
#!/bin/bash
# Ultimate Assistant Dashboard

echo "📊 Ultimate Assistant Dashboard"
echo "================================"

# Show configuration
echo "📧 Email: $USER_EMAIL"
echo "🤖 Assistant Level: Ultimate"
echo "⚡ Automation: Enabled"
echo "🔄 Sync: Real-time"

# Show active projects
echo ""
echo "📁 Active Projects:"
ls -la | grep "^d" | awk '{print $9}' | grep -v "^\.$\|^\.\.$" | while read project; do
    if [ -d "$project" ]; then
        echo "  - $project"
    fi
done

# Show recent activities
echo ""
echo "📈 Recent Activities:"
echo "  - Projects created: $(ls -1d */ 2>/dev/null | wc -l)"
echo "  - Scripts executed: $(ls -1 scripts/*.sh 2>/dev/null | wc -l)"
echo "  - Configs updated: $(ls -1 configs/*.json 2>/dev/null | wc -l)"

# Show system status
echo ""
echo "🖥️ System Status:"
echo "  - CPU Usage: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
echo "  - Memory Usage: $(free | grep Mem | awk '{printf "%.1f%%", $3/$2 * 100.0}')"
echo "  - Disk Usage: $(df -h . | tail -1 | awk '{print $5}')"

echo ""
echo "🎉 Ultimate Assistant is ready!"
echo "📧 All notifications will be sent to: $USER_EMAIL"
EOF

chmod +x scripts/ultimate-dashboard.sh
echo "✅ Ultimate dashboard script created"

# Create email notification setup
cat > scripts/setup-email-notifications.sh << 'EOF'
#!/bin/bash
# Email Notifications Setup

echo "📧 Setting up email notifications..."

# Install mailutils if not present
if ! command -v mail &> /dev/null; then
    echo "📦 Installing mailutils..."
    sudo apt-get update
    sudo apt-get install -y mailutils
fi

# Configure email settings
echo "📝 Configuring email settings..."
cat > ~/.mailrc << EOL
set from="$USER_EMAIL"
set smtp="smtp.gmail.com:587"
set smtp-auth-user="$USER_EMAIL"
set smtp-auth-password="your_app_password"
set smtp-auth=login
set ssl-verify=ignore
set nss-config-dir=/etc/ssl/certs
EOL

echo "✅ Email notifications configured"
echo "⚠️  Please update your app password in ~/.mailrc"
EOF

chmod +x scripts/setup-email-notifications.sh
echo "✅ Email notifications setup script created"

echo ""
echo "🎉 Ultimate Assistant Configuration Completed!"
echo ""
echo "📋 Configuration Summary:"
echo "  - Email: $USER_EMAIL"
echo "  - Assistant Level: Ultimate"
echo "  - Automation: Enabled"
echo "  - Sync: Real-time"
echo ""
echo "🔧 Available Scripts:"
echo "  - ./scripts/auto-project-setup.sh <project_name>"
echo "  - ./scripts/auto-deploy.sh <project_name>"
echo "  - ./scripts/auto-monitor.sh <project_name>"
echo "  - ./scripts/ultimate-dashboard.sh"
echo "  - ./scripts/setup-email-notifications.sh"
echo ""
echo "📧 All notifications will be sent to: $USER_EMAIL"
echo "🚀 Ultimate Assistant is ready to serve!"